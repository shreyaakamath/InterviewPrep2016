package spoj.most.solved.probs;

import java.util.LinkedHashMap;
import java.util.Scanner;

public class Candy {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		LinkedHashMap<Integer, int[]> map = new LinkedHashMap<Integer, int[]>();
		while(scan.hasNext()){
			Integer num = scan.nextInt();
			if(num==-1) break;
			int [] arr = new int[num];
			for(int i=0;i<num;i++){
				arr[i] = scan.nextInt();
			}
			map.put(num, arr);
		}
		
		for(int count : map.keySet()){
			int[] arr = map.get(count);
			int length = arr.length;
			int total=0;
			for(int i:arr) total+=i;
			int ideal = total/length;
			int additions=0;
			int available =0;
			for(int i:arr){
				if(i==ideal) continue;
				if(i<ideal) {additions = ideal-i;continue;}
				if(i>ideal){available = i-ideal;continue;}
			}
			if(available==additions){System.out.println(additions);}
			else {System.out.println(""-1");}
			
		}
	}

}
