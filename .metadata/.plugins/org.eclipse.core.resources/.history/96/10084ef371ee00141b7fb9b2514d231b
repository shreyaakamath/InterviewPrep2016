package spoj.most.solved.probs;

import java.util.*;
public class LastDig {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int test = scan.nextInt();
		int[] arrayA = new int[test];
		int[] arrayB = new int[test];
		for(int i=0;i<test;i++){
			arrayA[i] = scan.nextInt();
			arrayB[i] = scan.nextInt();
		}
		LinkedHashMap<Integer, int[]> stdLastDig = new LinkedHashMap<Integer, int[]>();
		stdLastDig.put(2, new int[] {6,2,4,8});
		List<Integer> directLastDig = new ArrayList<Integer>();
		directLastDig.add(1);directLastDig.add(5);directLastDig.add(6);directLastDig.add(0);
		for(int i=0;i<test;i++){
			int a = arrayA[i];
			int b = arrayB[i];
			int lastDig = a%10;
			if(directLastDig.contains(lastDig)) {System.out.println(lastDig);continue;}
				int[] arr = stdLastDig.get(lastDig);
				int size = arr.length;
				int position = b%size;
				System.out.println(arr[position]);
			}
	}
}